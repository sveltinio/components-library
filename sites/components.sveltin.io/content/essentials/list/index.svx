---
title: ToggleList
author: sveltin
slug: list
headline: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec porttitor eget elit vel semper. Cras.
created_at: 20-Jul-2022
updated_at: 20-Jul-2022
cover:
draft: false
---

# {title}

The **ToggleList** component is used to easisy includes tabs within the page. It supports different variants and sizes:

- **sizes**: _xs_, _sm_, _base_, _md_, _lg_ (default) and _full_

## :wave: Examples

### DEFAULT

```svelte example
<script>
    import {ToggleList} from '@sveltinio/essentials';
    // sample icons
    import CloudUploadIcon from '@indaco/svelte-iconoir/icons/CloudUploadIcon.svelte';
    import BellIcon from '@indaco/svelte-iconoir/icons/BellIcon.svelte';
    // sample data
    const contentForToggleList = [
      { label: 'First', url: '#first', icon: CloudUploadIcon },
      { label: 'Second', url: '#second', icon: BellIcon }
   ];
</script>

<ToggleList title="My Toggle List" items={contentForToggleList} />
```

### CUSTOM ICONS

```svelte example hideScript
<script>
   import { ToggleList } from '@sveltinio/essentials';
   // sample icons
   import LongArrowDownRightIcon from '@indaco/svelte-iconoir/icons/LongArrowDownRightIcon.svelte';
   import LongArrowRightUpIcon from '@indaco/svelte-iconoir/icons/LongArrowRightUpIcon.svelte';
   import CloudUploadIcon from '@indaco/svelte-iconoir/icons/CloudUploadIcon.svelte';
   import BellIcon from '@indaco/svelte-iconoir/icons/BellIcon.svelte';
   // sample data
   const contentForToggleList = [
      { label: 'First', url: '#first', icon: CloudUploadIcon },
      { label: 'Second', url: '#second', icon: BellIcon }
   ];
</script>

<ToggleList title="My Toggle List 2" items={contentForToggleList}>
   <LongArrowDownRightIcon slot="whenClosedIcon" />
   <LongArrowRightUpIcon slot="whenOpenIcon" />
</ToggleList>

```

## :page_facing_up: Properties

| Property  |  Type   | Required | Default | Description                                                    |
| :-------- | :-----: | :------: | :-----: | :------------------------------------------------------------- |
| title     | string  | yes      |         | The title for the List                                         |
| items     | Array   | yes      |         | An array of objects like `[{label: }]`
| size      | string  | no       | lg      | Set the tab title size (xs, sm, base, md or lg)                |
| withIcons | boolean | no       | true    | If false no icons will be placed on the next of the title text |

**items** is an array of __ListItem__ objects:

```javascript
export type ListItem = {
	label: string;
	url?: string;
	icon?: any;
};
```

## :rainbow: Theming

To simplify custom styles on the component, behind the scenes we used the built-in solution for component theming using [style props](https://svelte.dev/docs#template-syntax-component-directives---style-props).

Below is the CSS variables list you can use to apply your own styles to the component.

<script>
    import { ColorViewer } from '@sveltinio/essentials';
</script>

| CSS Variable            | Default          | Preview                          |
| :---------------------- | :--------------- | :------------------------------: |
| title-color             | rgb(15 23 42)    | <ColorViewer value ="#0F172A" /> |
| title-color-hover       | rgb(15 23 42)    | <ColorViewer value ="#0F172A" /> |
| title-font-weight       | 600              |                                  |
| title-bg-color          | rgb(255 255 255) | <ColorViewer value ="#FFFFFF" /> |
| title-bg-color-hover    | rgb(248 250 252) | <ColorViewer value ="#F8FAFC" /> |
| item-color              | rgb(51 65 85)    | <ColorViewer value ="#334155" /> |
| item-border-width       | 1px              |                                  |
| item-border-style       | solid            |                                  |
| item-border-color       | rgb(241 245 249) | <ColorViewer value ="#F1F5F9" /> |
| item-color-hover        | rgb(51 65 85)    | <ColorViewer value ="#334155" /> |
| item-border-color-hover | rgb(241 245 249) | <ColorViewer value ="#F1F5F9" /> |
| active-color            | rgb(15 23 42)    | <ColorViewer value ="#0F172A" /> |
| active-border-color     | rgb(15 23 42)    | <ColorViewer value ="#0F172A" /> |

##### Example

Create an object with the CSS variable name as `key` and the new value as `value` and pass it to the `styles` prop on the component.

```svelte example
<script>
   import { ToggleList } from '@sveltinio/essentials';
   // sample data
   const contentForToggleList = [
      { label: 'First', url: '#first' },
      { label: 'Second', url: '#second' }
   ];

   const myOwnStyles = {
      'title-color': '#365314',
      'title-color-hover': '#365314',
      'title-bg-color': '#bef264',
      'title-bg-color-hover': '#a3e635',
      'item-border-width': '2px',
      'item-border-style': 'dashed',
      'item-border-color': '#bef264',
      'item-border-color-hover': '#365314',
      'item-color': '#365314'
   };
</script>

<ToggleList title="My Own Styles List" items={contentForToggleList} styles={myOwnStyles} />
```
