---
title: Button
author: sveltin
slug: button
headline: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec porttitor eget elit vel semper. Cras.
created_at: 17-Jul-2022
updated_at: 19-Jul-2022
cover:
draft: false
---

# {title}

The **Button** component can be used for both `<button>` and link `<a>` by adding the _href_ prop. It supports different variants, sizes, shapes and others:

- **types**: _default_, _primary_, _secondary_, _info_, _error_, _success_, _warning_, _light_ and _dark_
- **sizes**: _xs_, _sm_, _base_ (default), _md_, _lg_ and _full_
- **variants**: _filled_ (default), _outlined_
- **shapes**: rectangular (default), _rounded_ or _circular_
- **focus**: with or without the focus ring
- **icons**: render an Icon either on the left or the right side. Wrap the Icon with the Button component, then add the slot='leftIcon' or slot='rightIcon' prop to your Icon.

## :wave: Examples

```html
<script>
   import { Button } from '@sveltinio/essentials'
   import { MailIcon, PlusIcon } from '@indaco/svelte-iconoir';

   const handleButtonClick = (event) => { alert('button clicked on:' + event.detail); };
<script>

const handleButtonClick = (event) => {
  alert('button clicked on:' + event.detail);
};

<Button type="primary" on:click={handleButtonClick} />
<Button label="Click Me" type="secondary" border="dashed" />
<Button label="Click Me" outlined rounded />
<Button label="Click Me" type="success" rounded withFocus />
<Button type="success">
  <MailIcon slot="leftIcon" /> Button Text
</Button>
<Button type="success">
  <MailIcon slot="rightIcon" /> Button Text
</Button>
<Button type="primary" size="lg" circular>
  <PlusIcon />
</Button>
<Button href="https://sveltin.io" />
<Button type="secondary" href="/posts/welcome" prefetch />
```

## :page_facing_up: Properties

The **Button** component exposes a set of properties but it does not prevent you to pass any additional props.

The following are the ones exposed by the component:

| Property      | Type              | Required | Default     | Description                                                     |
| :------------ | :---------------: | :------: | :---------: |:--------------------------------------------------------------- |
| label         | string            | no       | Button Text | Set the label for the button                                    |
| altText       | string            | no       |             | Set the alt text property                                       |
| type          | string            | no       | default     | Button type (primary, secondary, error, success, ...)           |
| size          | string            | no       | base        | Set the button size (xs, sm, base, md or lg)                    |
| border        | string            | no       | solid       | Set the border style (solid, dashaed, dotted, ...)              |
| outlined      | boolean           | no       | false       | White background button with the border                         |
| rounded       | boolean           | no       | false       | Rounded button                                                  |
| circular      | boolean           | no       | false       | Full circular button                                            |
| fullSize      | boolean           | no       | false       | Will take the full width of the container                       |
| withFocusRing | boolean           | no       | false       | If true, a ring will be displayed when the button has the focus |
| href          | string            | no       |             | The URL of the page the link goes to                            |
| prefetch      | boolean           | no       | false       | Enable sveltekit:prefetch for the link                          |
| external      | boolean           | no       | false       | If true, opens the linked document in a new window or tab       |

## :rainbow: Theming

To simplify custom styles on the component we used the built-in solution for component theming using [style props](https://svelte.dev/docs#template-syntax-component-directives---style-props).

The **Button** component allows you to pass the following styles as props:

<script>
    import { ColorViewer } from '@sveltinio/essentials/dist';
</script>

| CSS Variable      | Default            | Preview                          |
| :---------------- | :------------------| :------------------------------: |
| color             | rgb(255 255 255)   | <ColorViewer value ="#FFFFFF" /> |
| bg-color          | rgb(228 228 231)   | <ColorViewer value ="#E4E4E4" /> |
| bg-color-hover    | rgb(244 244 245)   | <ColorViewer value ="#F4F4F5" /> |
| border-color      | rgb(228 228 231)   | <ColorViewer value ="#E4E4E7" /> |
| outlined-bg-hover | rgb(244 244 245)   | <ColorViewer value ="#F4F4F5" /> |
| ring-color        | rgb(212 212 216)   | <ColorViewer value ="#D4D4D8" /> |
| ring-width        |              2px   |                                  |
| ring-offset       |              2px   |                                  |
| ring-style        |            solid   |                                  |


### :wave: Example

```html
<script>
   import { Button } from '@sveltinio/essentials';
</script>

<Button
  label="Custom Success"
  type="success"
  rounded
  withFocus
  --color="rgb(54 83 20)"
  --border-color="rgb(236 252 203)"
  --bg-color="rgb(132 204 22)"
  --bg-hover="rgb(163 230 53)"
  --ring-color="rgb(190 242 100)"
  --ring-style="dashed"
/>
```
